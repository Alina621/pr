"use strict"

const predictions = [
    "Стремитесь к успеху и выглядите так, словно вы его уже достигли.",
    "Никогда не надейся, что изменится кто-то другой. Изменения всегда нужно начинать с самого себя.",
    "У всякого святого есть прошлое, у всякого грешника — будущее.",
    "Чем мы наполняем наши молитвы, то нам и причитается.",
    "Разница между победителем и побежденным только в том, что первый поднялся больше раз, чем упал.",
    "Никакой транспорт не будет попутным, если не знаешь, куда идти.",
    "Не стоит тратить время и силы на мелочи, нужно думать о главном.",
    "Все не так гладко, как того бы хотелось, но намного лучше, чем могло бы быть.",
    "Нужно делать то, что ты должен делать. И пусть все будет так, как будет.",
    "Определитесь с конечной целью – и у вас появится шанс на победу.",
    "Ты можешь сказать всё, что угодно, но твои действия показывают твоё настоящее отношение.",
    "Стать твоим другом дано не каждому, но каждому дано стать чьим-то учителем.",
    "Чтобы быть поистине счастливым – властвуй над своими помыслами.",
    "Не стоит принимать доброту за слабость, грубость за силу, а подлость за умение жить.",
    "Почему Вы рассуждаете о жизни, вместо того, чтобы ощущать ее?",
    "Каким бы огромным ни было расстояние – оно начинается с первого шага.",
    "Пусть тебя не страшит неумение. Делая с желанием – научишься.",
    "Лучше сделать и пожалеть о сделанном, чем не сделать и сожалеть о не сделанном.",
    "От того, что ты делаешь сегодня, зависит то, как ты будешь жить завтра.",
    "Единственная разница между хорошим и плохим днём — твоё отношение к нему."
];
//Объявляются переменные для элементов DOM
const text = document.querySelector('#text')
const button_start = document.querySelector('#start')
const button_stop = document.querySelector('#stop')
const timer_text = document.querySelector('#timer')

let timerId
//Создается функция getRandomInt(min, max), которая генерирует случайное целое число в заданном диапазоне
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
//Создается функция startTimer(), которая инициирует интервальный таймер с помощью метода setInterval. 
//Внутри этой функции вызывается getRandomInt() для генерации случайного числа в диапазоне от 1 до 20, которое затем выводится в элемент timertext.
function startTimer() {
    timerId = setInterval(function() {
        let randomInt = getRandomInt(1, 20)

        timer_text.textContent = randomInt
    }, 100)

}

button_start.addEventListener('click', e => {
    button_start.classList.remove('active')
    button_stop.classList.add('active')

    startTimer()

})

//Добавляются обработчики событий на кнопки buttonstart и buttonstop. При нажатии на кнопку "Start" запускается функция startTimer() и обновляется класс активности кнопок.
// При нажатии на кнопку "Stop" вызывается метод clearInterval для остановки интервального таймера и выводится предсказание на основе последнего сгенерированного числа.


button_stop.addEventListener('click', e => {
    clearInterval(timerId)
    button_stop.classList.remove('active')
    
    text.textContent = predictions[timer_text.textContent - 1]
})
